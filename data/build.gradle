ext {
    room = '2.2.1'
    gson = '2.8.6'
    okhttp = '4.0.1'
    retrofit = '2.6.2'
}
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion sdk.compile

    defaultConfig {
        minSdkVersion sdk.min
        targetSdkVersion sdk.target

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        debug {
            buildConfigField "String", "API_BASE_URL", API_BASE_URL

            debuggable true
        }
        release {
            buildConfigField "String", "API_BASE_URL", API_BASE_URL

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation project(path: ':domain')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "org.koin:koin-android:$koin"
    implementation "com.jakewharton.timber:timber:$timber"

    kapt "androidx.room:room-compiler:$room"
    implementation "androidx.room:room-runtime:$room"

    implementation "com.google.code.gson:gson:$gson"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp"

    testImplementation "org.amshove.kluent:kluent:$test.kluent"
    testImplementation "junit:junit:$test.junit"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$test.mockitokt"
    testImplementation "org.assertj:assertj-core:$test.assertj"
    testImplementation "org.mockito:mockito-core:$test.mockito"
}